/* SANDEEP YADAv*/
#include<bits/stdc++.h>
using namespace std;
#define lld long long int
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define mod 1000000007
#define fastio ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
lld gcd(lld a,lld b){ if(a<b) { a=a+b; b=a-b; a=a-b;}while(b!=0){lld r=a%b; a=b; b=r;} return a;}
long long power(long long a, long long b, long long m) {a %= m;long long res = 1;while (b > 0) {if (b & 1)res = res * a % m;a = a * a % m;b >>= 1;}return res;}
void judge()
{
      #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    freopen("error.txt","w",stderr);
    #endif
}

vector<bool> visited(1000000);
vector<int>level(1000000,0);
int maxi=0;
void bfs(std::vector<std::vector<int>>&adj,int source)
{
	queue<int>q;
	q.push(source);
	visited[source]=true;
	level[source]=1;

	while(!q.empty())
	{
		source=q.front();
		q.pop();
		for (std::vector<int>::iterator i = adj[source].begin(); i != adj[source].end(); ++i)
		{
			if(visited[*i]==false)
			{
			   visited[*i]=true;
				level[*i]=level[source]+1;
				maxi=max(maxi,level[*i]);
				q.push(*i);
			}
		}
	}
}
int main()
{

    fastio;
    //judge();

    int n;
    cin>>n;

     std::vector<std::vector<int>>adj(n);
    int source;
    for(int i=0;i<n;i++)
    {
    	int x;
    	cin>>x;

    	if(x==-1)
    	{
    		source=i;
    	}
    	else
    	{
    	adj[x].pb(i);
    	adj[i].pb(x);
        }
    }


     bfs(adj,source);

    cout<<maxi;

    return 0;
}
