/* SANDEEP YADAv*/
#include<bits/stdc++.h>
using namespace std;
#define lld long long int
#define pb push_back
#define mkp make_pair
#define fi first
#define se second
#define mod 1000000007
#define fastio ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
lld gcd(lld a,lld b){ if(a<b) { a=a+b; b=a-b; a=a-b;}while(b!=0){lld r=a%b; a=b; b=r;} return a;}
long long power(long long a, long long b, long long m) {a %= m;long long res = 1;while (b > 0) {if (b & 1)res = res * a % m;a = a * a % m;b >>= 1;}return res;}
void judge()
{
      #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    freopen("error.txt","w",stderr);
    #endif
}

int findpar(int par[],int x)
{
    if(par[x]==x)
        return x;
    par[x]=findpar(par,par[x]);
    return par[x];

}
int main()
{
    fastio;
    //judge();

    int n,m;
    cin>>n>>m;

     int par[n+1];
     int size[n+1];
    priority_queue<lld>pq;
    pq.push(0);
     for(int i=1;i<=n;i++)
     {
        par[i]=i;
        cin>>size[i];
        if(size[i]>pq.top())
        {
            pq.pop();
            pq.push(size[i]);
        }
     }
     for(int i=0;i<m;i++)
     {
        int x,y;
        cin>>x>>y;
        int px=findpar(par,x);
        int py=findpar(par,y);
        if(px!=py)
        {
            if(size[px]>=size[py])
            {
                size[px]+=size[py];
                par[py]=px;
                size[py]=0;
                if(size[px]>pq.top())
                {
                    pq.pop();
                    pq.push(size[px]);
                }
            }
            else
            {
                size[py]+=size[px];
                par[px]=py;
                size[px]=0;
                if(size[py]>pq.top())
                {
                    pq.pop();
                    pq.push(size[py]);
                }
            }
        }
        cout<<pq.top()<<"\n";
     }
        
    return 0;
}
